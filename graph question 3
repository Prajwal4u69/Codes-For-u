#include<bits/stdc++.h>
using namespace std;
stack <int> st;
int cycle(int *adj_matrix,int vertex,int *in_stack,int *color,int source)
{
	int a=0,j;

	for(j=0;j<vertex;j++)
	{
		if((color[j]==0 )&&((*(adj_matrix + source*vertex + j ))==1))
		{
			st.push(j);
			color[j]=1;
			in_stack[j]=1;
			a=cycle(adj_matrix,vertex,in_stack,color,j);
		}
		else if(((*(adj_matrix + source*vertex + j ))==1) && (in_stack[j]==1))
		{
			return 1;
		}
	}

	color[source]=3;
	st.pop();
	in_stack[source]=0;
	return a;

}
int main()
{
	int source=0,vertex;
	cin>>vertex;

	int adj_matrix[vertex][vertex];
	int i=0,j=0;
	int in_stack[vertex]={0},color[vertex]={0};

	for(i=0;i<vertex;i++)
		for(j=0;j<vertex;j++)
			cin>>adj_matrix[i][j];
	st.push(source);
	in_stack[source]=1;
	color[source]=1;
	if(cycle(&adj_matrix[0][0],vertex,in_stack,color,source)==1)
		cout<<"Cycle Exist\n";
	else
		cout<<"No cycle\n";
}

