/*
Given an already sorted array of positive integers, design an algorithm and implement it using a
program to find whether given key element is present in the array or not. Also, find total number
of comparisons for each input case. (Time Complexity = O(nlogn), where n is the size of input).
*/
#include<stdio.h>
#include<stdlib.h>
static int com=0;
int binary_search(int *a,int key,int l, int r,int n)
{
	int mid;
    com++;
	if(l==r)
	{
		if(a[l]==key)
		return l+1;
		else
		return -1;
	}

	mid=(l+r)/2;

	if(key==a[mid])
	return mid+1;
	else if(key<a[mid])
	binary_search(a,key,l,mid-1,n);
	else
	binary_search(a,key,mid+1,r,n);
}

int main()
{
	int t,n,*array,i=0,key,val;
	scanf("%d",&t);
	while(t--)
	{	
		scanf("%d",&n);
		array=(int *)malloc(sizeof(int)*n);
	
		for(i=0;i<n;i++)
		scanf("%d",array+i);
		
	//	sort(array,array+n);
		
		scanf("%d",&key);
		val=binary_search(array,key,0,n-1,n);
		if(val!=-1)
			printf("Element found at %d\n",val);
		else
			printf("Not Found\n");
			
			printf("\n %d",com);
	}
		
}
