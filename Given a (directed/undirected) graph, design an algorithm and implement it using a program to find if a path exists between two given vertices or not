#include<bits/stdc++.h>
using namespace std;

int find_path(int *adj_matrix,int vertex, int source,int destination)
{
	int color[vertex];
	int i,u,j;
	stack <int> st;
	for(i=0;i<vertex;i++)
	{
		color[i]=0;
	}
	st.push(source);
	color[source]=1;
	while(st.empty()==0)
	{
		u=st.top();
		st.pop();

		for(j=0;j<vertex;j++)
		{
			if(color[j]==0&&(*(adj_matrix + u*vertex + j))==1)
			{
				if(j==destination)
					return 1;
				st.push(j);
				color[j]=1;
			}
		}
		color[u]=3;
	}
	return 0;

}
int main()
{
	int source,vertex,destination;
	cin>>vertex;

	int adj_matrix[vertex][vertex];
	int i=0,j=0;

	for(i=0;i<vertex;i++)
		for(j=0;j<vertex;j++)
			cin>>adj_matrix[i][j];

	cin>>source;
	cin>>destination;

	if(find_path(&adj_matrix[0][0],vertex,source-1,destination-1)==0)
		cout<<"No Path Exist\n";
	else
		cout<<"Path Exist\n";
}

