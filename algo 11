.Given an unsorted array of integers, design an algorithm and implement it using a program to find Kth smallest or largest element in 
the array. (Worst case Time Complexity = O(n))


#include<bits/stdc++.h>
using namespace std;
	
int partition(int *array,int l, int r)
{
	int pivot=array[r],i=l-1,j=l,temp;
	
	while(j<r)
	{
		if(array[j]<=pivot)
		{
			i++;
			temp=array[i];
			array[i]=array[j];
			array[j]=temp;
			
		}
		j++;
	}
	i=i+1;
	temp=array[i];
	array[i]=pivot;
	array[r]=temp;
	return i;
	
}

int	find(int *array,int l,int r,int k)
{	int p;

	if(l<r)
	{	p=partition(array,l,r);
		if(p==k)
			return p;
		else if(k<p)
			r=p-1;
		else
			l=p+1;
			
	}
	return l;
}
int main()
{
	int n,t,*array,k,val;
	cin>>t;
	while(t--)
	{
		cin>>n;
		array=(int *)malloc(sizeof(int)*n);
		for(int i=0;i<n;i++)
		{
			cin>>array[i];
		}
		cin>>k;
		val=find(array,0,n-1,k-1);
		cout<<array[val];
		
	}
}

